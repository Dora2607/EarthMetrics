@use "@angular/material" as mat;
@use "./app/app.component.theme" as app-theme;
@include mat.core();

$light-theme: mat.define-theme(
  (
    color: (
      use-system-variables: true,
    ),
    typography: (
      use-system-variables: true,
    ),
  )
);

:root {
  @include mat.all-component-themes($light-theme);
  @include app-theme.theme($light-theme);
  @include mat.system-level-colors($light-theme);
  @include mat.system-level-typography($light-theme);
}

// Breakpoint Variables
$breakpoint-small: 600px;
$breakpoint-medium: 960px;
$breakpoint-large: 1280px;

html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

// Colors
$primary-color: #006d77;
$primary-color-dark: #83c5be;
$secondary-color: #f79824;

// Typography Variables

// Typography Variables
$font-sizes: (
  headline1: 92px,
  headline2: 56px,
  headline3: 44px,
  headline4: 30px,
  headline5: 20px,
  headline6: 16px,
  subtitle1: 12px,
  subtitle2: 10px,
  body: 16px,
  button: 14px,
  caption: 12px,
  overline: 10px,
);

// Typography
h1 {
  font-size: map-get($font-sizes, headline1);
  font-weight: 300;
  letter-spacing: -1.5px;
}

h2 {
  font-size: map-get($font-sizes, headline2);
  font-weight: 300;
  letter-spacing: -0.5px;
}

h3 {
  font-size: map-get($font-sizes, headline3);
  font-weight: 400;
  letter-spacing: 0px;
}

h4 {
  font-size: map-get($font-sizes, headline4);
  font-weight: 400;
  letter-spacing: 0.25px;
}

h5 {
  font-size: map-get($font-sizes, headline5);
  font-weight: 400;
  letter-spacing: 0px;
}

h6 {
  font-size: map-get($font-sizes, headline6);
  font-weight: 500;
  letter-spacing: 0.15px;
}

.subtitle1 {
  font-size: map-get($font-sizes, subtitle1);
  font-weight: 400;
  letter-spacing: 0.15px;
}

.subtitle2 {
  font-size: map-get($font-sizes, subtitle2);
  font-weight: 500;
  letter-spacing: 0.1px;
}

body {
  font-size: map-get($font-sizes, body);
  font-weight: 400;
  letter-spacing: 0.5px;
}

button {
  font-size: map-get($font-sizes, button);
  font-weight: 500;
  letter-spacing: 1.25px;
  text-transform: uppercase;
}

caption {
  font-size: map-get($font-sizes, caption);
  font-weight: 400;
  letter-spacing: 0.4px;
}

overline {
  font-size: map-get($font-sizes, overline);
  font-weight: 400;
  letter-spacing: 1.5px;
  text-transform: uppercase;
}

// Media Queries
@media (min-width: $breakpoint-small) {
  h1 {
    font-size: map-get($font-sizes, headline1);
  }
  h2 {
    font-size: map-get($font-sizes, headline2);
  }
  h3 {
    font-size: map-get($font-sizes, headline3);
  }
  h4 {
    font-size: map-get($font-sizes, headline4);
  }
  h5 {
    font-size: map-get($font-sizes, headline5);
  }
  h6 {
    font-size: map-get($font-sizes, headline6);
  }
}

@media (min-width: $breakpoint-medium) {
  h1 {
    font-size: map-get($font-sizes, headline1);
  }
  h2 {
    font-size: map-get($font-sizes, headline2);
  }
  h3 {
    font-size: map-get($font-sizes, headline3);
  }
  h4 {
    font-size: map-get($font-sizes, headline4);
  }
  h5 {
    font-size: map-get($font-sizes, headline5);
  }
  h6 {
    font-size: map-get($font-sizes, headline6);
  }
}

@media (min-width: $breakpoint-large) {
  h1 {
    font-size: map-get($font-sizes, headline1);
  }
  h2 {
    font-size: map-get($font-sizes, headline2);
  }
  h3 {
    font-size: map-get($font-sizes, headline3);
  }
  h4 {
    font-size: map-get($font-sizes, headline4);
  }
  h5 {
    font-size: map-get($font-sizes, headline5);
  }
  h6 {
    font-size: map-get($font-sizes, headline6);
  }

  p {
    font-size: map-get($font-sizes, body1);
    line-height: 2rem;
  }
}

// Background images for light and dark mode
html.dark .pageSelectorContainer {
  background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320"><path fill="%235C807D" fill-opacity="1" d="M0,256L0,160L360,160L360,224L720,224L720,128L1080,128L1080,64L1440,64L1440,0L1080,0L1080,0L720,0L720,0L360,0L360,0L0,0L0,0Z"></path></svg>');
  transition: all 0.2s ease-in-out;
}

//Styling sideMenuItem for dark theme

html.dark {
  .sideMenuItem {
    color: $primary-color-dark !important;
    &:hover {
      color: #fff !important;
    }
  }
}

//Styling dynamic paragraph for dark theme
html.dark {
  .darkTitle {
    color: $primary-color-dark !important;
  }
}

html.dark {
  .contents {
    .darkDynamicTitle {
      color: $primary-color-dark !important;
      text-shadow: none !important;
    }
  }
}

//Global style of chart Container
.chartMainContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  .echartContainer {
    width: 100%;
    height: 500px;
  }
}
